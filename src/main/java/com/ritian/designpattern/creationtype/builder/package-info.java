/**
 * @author ritian.Zhang
 * @date 2019/04/19
 **/
package com.ritian.designpattern.creationtype.builder;
/*
*  建造者模式：
*  创建者模式又叫建造者模式，是将一个复杂的对象的构建与它的表示分离，
*  使得同样的构建过程可以创建不同的表示。创建者模式隐藏了复杂对象的创建过程，
*  它把复杂对象的创建过程加以抽象，通过子类继承或者重载的方式，动态的创建具有复合属性的对象。
*
*  组成部分(四个角色)
*   Product —— 产品类
*   Builder —— 抽象的Builder类，规范产品的组建，一般由子类实现具体过程
*   ConcreteBuilder —— Builder的实现类，实现Builder类中定义方法，并返回组建好的对象
*   Director——统一组装过程(现实开发中，一般被省略，直接使用一个Builder来进行对象的组装）
*
*
* 场景：
* 用于创建类的实例（常用的）
*
*
优点：
使用建造者模式可以使客户端不必知道产品内部组成的细节。
具体的建造者类之间是相互独立的，这有利于系统的扩展。
具体的建造者相互独立，因此可以对建造的过程逐步细化，而不会对其他模块产生任何影响。

缺点：
建造者模式所创建的产品一般具有较多的共同点，其组成部分相似；如果产品之间的差异性很大，则不适合使用建造者模式，因此其使用范围受到一定的限制。
如果产品的内部变化复杂，可能会导致需要定义很多具体建造者类来实现这种变化，导致系统变得很庞大

*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
* */